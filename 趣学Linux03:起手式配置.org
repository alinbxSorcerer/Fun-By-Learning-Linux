* 第3章 初始化配置

用户装完系统并改好启动顺序后，马上重启了一下看看效果。于是，BIOS再一次被电醒，Grub大叔再一次面无表情地问：要叫哪个？给你5秒，不说我就去叫WindowsXP了啊！用户满意地点点头，然后他选择了启动我这个新装的Ubuntu操作系统。于是，刚刚躺下还没把被子捂暖的我，又被Grub大叔叫起来干活了。哎，刚安顿下来也不让人家休息一下。不过也是，系统仅仅装好还不算完，还是要做一些基本设置的。

** 3.1　招贤纳士的apt

启动完毕后，这位懒蜗牛同学猛然发现，怎么好像菜单都是英文的呢（我终于根据用户输入的用户名，猜测到了他准确的中文名叫“懒蜗牛”，嘿嘿）？装的时候选的是中文啊。是的，虽然选的是中文，但如果用户在安装的时候没有联网，无法下载语言包，界面上就只有少数几个地方被翻译了过来，大部分的菜单还是英文的。那难道就这样凑合着看英文了？当然不是，系统安装好之后再安装中文包也是一样的。那么怎么安装中文包呢？又怎么安装其他需要的软件呢？嘿嘿，很简单。

[[./Images/image00227.jpeg]]*提示：*如果是DVD光盘版的Ubuntu，就可以在安装时装好完整的中文支持，CD版因为没有足够空间而无法提供完整的语言包。

*** 3.1.1　不一样的软件安装方式

懒蜗牛同学显然还没明白过来为什么满眼英文，他决定要为自己的记忆力讨个说法。于是他去查看了一下系统的语言设置。我看到他的这个操作，就赶紧很诚实地告诉他：你选的确实是中文，但是呢，由于一些错综复杂的原因（其实主要是因为我曾经逃了那么7、8节中文课），相关的一些语言包并没有完全安装，那么你现在要不要马上装呢？就像图3.1这样给他提示。懒蜗牛同学自然是义无反顾地单击了Install按钮，我一看用户决定要装中文包了，就赶紧去硬盘里叫醒专门负责安装软件的apt。

[[./Images/image00279.jpeg]]

图3.1　系统提示语言包未完全安装

*提示：*要查看系统语言设置，单击界面上方的System|Administration |Language Support菜单，选择的步骤如图3.2所示。

[[./Images/image00280.jpeg]]

图3.2　查看系统语言设置

【apt在Ubuntu中扮演什么角色呢】

这个家伙在我们Ubuntu系统里的角色，就像一个公司里的人事部经理兼后勤部长。
# 组织部长, 人事部门经理. 安装便是招聘了.
系统里装个软件、卸个软件的，都归他管。软件所需要用的各种环境文件啥的，也都是他负责准备。不像隔壁那个Windows7似的，装个软件要用户自己上网找、自己下载、自己安装。在我们这，apt全替您搞定了。当别人夸奖他的时候，他总是自信地拍拍自己的胸脯说：“本apt有着超级牛力。”因为他老把这句挂载嘴边，所以时间长了，我们就都管他叫“超级牛力”了（以下“超级牛力特指apt）。不过他也确实挺厉害，很牛很给力，工作起来兢兢业业，对于每个软件的各种情况了如指掌。要招一个软件来的时候，他会做好所有准备工作，这个软件需要用什么样的库，或者需要什么其他的软件协同工作，他都会事先做好准备。要是哪个软件不幸被用户辞退了，他也会帮忙把那个软件相关的所用东西一一清点好，清理出硬盘。
# apt作为组织部长

【apt是如何工作的呢】

比如，用户想用Vim文本编辑器来编辑文件，就叫apt去招Vim来工作。apt就会报告，说Vim要来的话，首先需要准备好libncurses这个库和python这种脚本语言的执行环境。征得同意以后，他就会去网上找这些东西，并且运回家，把库放在该放的地方，相关的软件安排好住宿。然后他再去找Vim同志，请他过来帮忙干活，并且说明：需要的环境都已经布置好了，来了之后马上就开工。每次新人来了之后都很感谢apt同志为自己做的这些准备工作，该有的东西，该来的助手都在，于是干活就事半功倍了。但把人才请来之后，apt同志的工作还没有结束，他还要把现在的人事情况记录下来，方便以后查看。万一哪天用户问起“我说apt啊，咱这现在都有多少软件啊，都是谁啊？”“装的那个某某软件的版本是多少啊？”之类的问题，apt也能从容地回答。

可以说，apt这家伙对于我来说实在是非常重要的，有了他，Ubuntu才是Ubuntu。所以，在我们这里，要忘记WindowsXP那种安装软件的方式，装软件就跟apt说，让他去办，省心，放心。

*小提示：*想看apt说自己有apt吗？在终端运行apt-get--help试试。
#+BEGIN_SRC shell :results output
apt-get --help | head
#+END_SRC

#+RESULTS:
#+begin_example
apt 1.9.4 (amd64)
Usage: apt-get [options] command
       apt-get [options] install|remove pkg1 [pkg2 ...]
       apt-get [options] source pkg1 [pkg2 ...]

apt-get is a command line interface for retrieval of packages
and information about them from authenticated sources and
for installation, upgrade and removal of packages together
with their dependencies.

#+end_example


这不，现在懒蜗牛同学说要装中文环境，我就叫来了apt，告诉他去装一些中文字体和中文的输入法。apt听完之后拍拍胸脯说：“放心吧，本apt有apt！”说完一转身，从网口跑出去，到网上下载东西去了。

*** 3.1.2　选择合适的软件源

平时apt干活是很麻利的，可是今天我在内存里等了足足有一秒钟，才见apt拖回来1
KB的数据。我赶紧拉住他问：“怎么回事？怎么这么慢啊！照这速度得什么时候下载完啊？”他叹了口气：“唉，别提了，这路太远了，得翻过6个路由，跨过8道防火墙，路还窄，不是车多流量大就是行驶缓慢。费好半天劲才拖回这么一点。本apt有apt，也架不住堵车啊。”我问他：“你是去哪下载的这些东西啊？”apt说：“就是那个默认的
http://cn.archive.ubuntu.com/ubuntu/
唉，这家伙，我知道是怎么回事了，这得从apt的工作原理说起。

【有个东西叫软件源】

apt的职责之一是从网上下载需要的软件，但他去哪下载呢？不是瞎找，而是去一个专门的叫做“软件源”的地方。那里为Ubuntu系统提供各种打包好的软件，以及相关的信息介绍。软件源有很多，遍布世界各地，具体该去哪里，是由“软件源列表”决定的。这个列表就写在/etc/apt/sources.list这个文件里，apt工作的时候，就按这个文件里写的地址去下载软件。现在系统刚刚装上，这个文件里写的是默认的软件源地址。有的人可能离默认的软件源挺近，速度挺快。有的人可能就得绕过半个地球才能过去，那自然就慢了。所以装完系统之后，要根据自己的情况，换一个速度快的软件源。
#+BEGIN_SRC shell :results output
cat  /etc/apt/sources.list | head -n 8
#+END_SRC

#+RESULTS:
: # deb cdrom:[Kubuntu 19.10 _Eoan Ermine_ - Release amd64 (20191017)]/ eoan main multiverse restricted universe
:
: # See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
: # newer versions of the distribution.
: deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ eoan main restricted
: # deb-src http://cn.archive.ubuntu.com/ubuntu/ eoan main restricted
:
: ## Major bug fix updates produced after the final release of the

现在我这位懒蜗牛同学就是没有设置好软件源的典型案例。apt一边下载，一边向懒蜗牛同学汇报进度：“这个......根据计算，目前的下载速度大约每秒钟1KB，乐观地估计能赶在今年春节前下载完所有语言包。”懒蜗牛同学显然对这个结果很不满意，于是他做出了一个明智的决定------停止下载，先设置软件源！好，那咱们就该说说怎么设置软件源了？

【方法1，通过软件源管理器】

这是比较简单、省事的方法，推荐新手使用。

（1）单击界面上的System（系统）|Administration（系统管理）|SoftwareSources（软件源）菜单，如图3.3所示。这就是要启动软件源管理器。

[[./Images/image00281.jpeg]]
图3.3　打开软件源管理器

（2）进入这个软件之前需要确认一下您的身份，也就是需要输一下密码，只有管理员级别的用户才能够修改软件源。

（3）输入密码之后就可以看到软件源管理器的主界面了。可以看到下面有个Download
from，右面有个下拉列表框，现在选择的应该是“Serverfor中国”，我们要选那个下拉列表框里的“Other...”选项，如图3.4所示。

[[./Images/image00282.jpeg]]
图3.4　选择其他软件源

（4）选择之后会弹出一个如图3.5所示的窗口，让用户选择要用的软件源。用户可以直接在左侧的列表框里面选择，不过估计您会无所适从，不知道该选哪个。

[[./Images/image00283.jpeg]]
图3.5　列出所有的官方认证软件源

（5）如果无所适从，单击右上角那个Select Best
Server按钮，就会自动查找速度最快的软件源。

（6）查找结束之后，最快的软件源已经被选中，如图3.6所示，这时候只要单击Choose
Server按钮就可以了。

[[./Images/image00284.jpeg]]
图3.6　找到的最快的软件源

*提示：*最快的源不一定是地理位置上最近的，所以如果搜出个日本的源不要惊讶哦。

【方法2，自己手动换】

我们这位懒蜗牛同学就没有用上面那种简便的方式，而是想尝试一下亲自动手。他先是通过Firefox上网找到软件源的地址（Firefox是我们Ubuntu系统的默认浏览器，我喜欢叫她狐狸妹妹）。这并不难，用搜索引擎搜一下“Ubuntu软件源”，很多地方都可以找到。比如我们Ubuntu官方的wiki里就有：
http://wiki.ubuntu.org.cn/Template:10.04source。
软件源什么样？就是一大堆地址，类似这样：
[[./Images/image00285.jpeg]]

找到之后要换源很简单，打开/etc/apt/sources.list这个文件，把里面的东西清空，换上上面这一大坨就好了。软件源管理器做的其实也就是这样一个操作，新手还是用那个方便。像我这个懒蜗牛同学这样，非要自己动手改，结果，出问题了。他找到了一个看上去还不错的源，也知道要改哪个文件，于是，他动手了。他对命令似乎还挺熟悉，只见他运行了：
: emacs /etc/apt/soruce.list

*提示：*输入命令的终端位于“应用程序”|“附件”|“终端”。

这个命令的意思是叫gedit起床干活，打开/etc/apt/sources.list文件给用户看。于是我赶快去硬盘里叫醒gedit小弟。gedit是一个文本编辑器，比WindowsXP的记事本稍微强大点。gedit接到命令后赶快打开那个文件，显示给用户。用户把里面的东西统统一删，把找到的软件源的地址粘贴了进去，然后猛然发现，怎么那个“保存”按钮是灰的呢？gedit在那冷嘲热讽地念叨：“你以为你是谁呀？这可是重要的系统文件，你还想改？改坏了算谁的呀，你一个普通用户担待得起吗？”当然，这些都是他在工作间里自言自语，要真敢跟用户这么说话就等着被删吧。那么到底为什么不能保存呢？原因很简单------没有权限。

*提示：*/etc/apt/sources.list文件里可以写入多个软件源，但apt在下载软件的时候不会同时使用多个源来加快下载速度，而是优先使用写在前面的软件源，只有该软件源里没有找到要安装的软件时，才使用下一个软件源，依此类推。

*** 3.1.3　获取最高权限

“不对呀，你不是说安装系统的时候建的这个用户有超级用户的权力吗？”不好意思，您少记了3个字。我说的是，这个用户有“变身成”超级用户的权力。怎么变身？扭回头来吧，不用看窗外的月亮，只需要在要执行的命令前面加上“sudo”命令就可以了。sudo就是“以超级用户身份运行”的意思。用户直接运行gedit
/etc/apt/sources.list
，就是以普通用户身份打开sources.list文件，当然不能修改。应该运行：
: sudo emacs /ect/apt/source.list/

【变身技术指导】

这条命令的意思就是说：我要变身成超级用户并打开sources.list文件。但是不能您说变身我就让您变，您又不是变形金刚，这变身得讲条件。首先是核对一下身份，只有最初安装系统的时候创建的那个用户可以变身，装好之后再创建的其他用户就不行了（当然，最初的那个用户也可以把变身的能力赋予其他用户，这里说的只是默认情况）。确认了这个用户确实有变身的权利之后，还不算完，还需要让用户再输入一遍自己的密码。这样做，一来是防止恶意程序脚本骗取超级用户权限，再者也可以确认现在坐在电脑前的就是登录进来的用户。别回头老陈登录进来了，处理着半截照片上厕所去了。这时候来个修电脑的偷偷在老陈的电脑上以超级用户身份搞破坏，那就容易出事了。

*提示：*在命令行输入密码的时候没有任何回显，只要输入正确的密码并按回车键即可，千万不要怀疑自己的键盘过保修期了。

本以为我这位懒蜗牛同学会困惑好一会儿为什么不能保存，结果发现他好像不是不知道sudo，只是一时忘记了，发现gedit不能保存之后，马上就把gedit关了，在命令前加上了sudo重新来了一遍，这回OK了。看来这家伙是个老手，只是一时忘了而已。我开始庆幸我能遇上这么一个用户了。

【变身练习，更新软件列表】

软件源修改了之后，还不能马上生效，得先通知apt一声，让他去根据软件源更新软件列表。软件列表是什么意思？这个列表就是写明，现在所用的软件源里面都有什么软件，相互的依赖关系如何。这样当你要装软件的时候，apt直接查看这个列表就知道相关的软件信息。否则，万一哪个财迷用户让apt去装give\_me\_money软件，apt还得跑到网络上找软件源服务器问：“您这有一个叫give_me_money的软件吗？”人家肯定没好脸色地说：“我还想要呢！没有，回去！”然后apt再回来告诉用户，这样很耽误时间。所以，就要在每次换源之后，让apt去获取软件信息，把这些信息存在硬盘上。以后用户要是再想装什么不靠谱的软件，就可以直接让他死了这条心了。那么怎么更新软件列表呢？很简单，还是需要变身的命令：
: sudo apt-get update
*提示：*成功运行一次sudo指令后，五分钟内再运行sudo指令不必输入密码。

好了，现在软件源也改了，列表也更新了。这回，懒蜗牛同学再打开那个Language
Support，提示安装的时候单击Install按钮------这回不用等到春节了，只需要十几分钟的时间就可以下载完了（具体时间长短还要看网络带宽）。

*提示：*以后每次对/etc/apt/sources.list文件做了修改之后都要运行sudo apt-get update来更新软件列表。

另外，设置好软件源之后，再装别的软件就方便多了，想装什么软件只要运行：
: sudo apt-get install <package>

就可以了，apt会搞定剩下的事情。软件包名多数情况下就是软件的名称，不过也可能会有些出入，如果你想知道软件源里有没有你想要的软件，具体的软件包名称是什么，那么可以运行：
: sudo apt-cache search <package>

这样就会列出所有相关的软件包了，这都是apt更新了软件列表的结果。

*提示：*除sudo命令外，还可以使用su命令来实现在命令行中提高权限。su命令用于临时切换至任意用户------包括root，但需要该用户的密码。例如运行：
: su user1 # 切换用户.

则可以临时切换至user1用户，并拥有user1用户的权限。但运行此命令后需要输入user1用户的密码。而Ubuntu系统默认的root密码未知，因此，需要配合sudo命令来运行su，才可以切换至root权限。运行如下命令：
: sudo su root

如此，则相当于以root用户身份（sudo提高权限的结果）运行“su root”，即要求切换至root自身。因此su命令不要求输入密码，直接切换至root用户。

*** 3.1.4　为apt设置好网络

当然，刚才所说的这一切的前提是，你要把网络配置好。能上网，才能发挥apt的能力。我所在的这台电脑因为是用那种家用的宽带路由器，什么IP地址、DNS、路由等，都是由路由器的DHCP服务自动分配的，所以在我这里不需要设置什么，把网线插上就能上网了。如果不是这样的怎么办呢？咱们分情况慢慢说。

【手动设置网络参数的有线连接】

有的地方没有DHCP{Dynamic Host Configuration Protocol}，需要自己手动设置网络参数，也就是IP地址、DNS之类的。这个好办，你在Windows7下怎么设置的来着？找网络连接是不是？那我这里还找这个就对了。

（1）单击界面上的System（系统）|Perferences（首选项）|Network Connections（网络连接）打开网络连接界面，如图3.7所示。

[[./Images/image00293.jpeg]]

图3.7　网络连接

（2）打开网络连接界面之后，选择Wired（有线）标签（默认应该打开就是），下面的列表框里列出了所有的有线网卡，需要设置哪个，单击它选中，然后单击右面的Edit（编辑）按钮就好了。

（3）点开之后就可以设置MAC地址，IPv4的地址，甚至IPv6的地址。IPv6用得还不广泛，咱就光说这IPv4吧。选择IPv4标签，出现图3.8所示的界面，在Method（方法）下拉列表框里，选择Manual（手动），就是手动配置IP参数的意思（原来可能是Automatic（自动），如果有DHCP就选这个）。

[[./Images/image00294.jpeg]]

图3.8　设置IPv4参数

（4）选择手动后，下面的Addresses（地址）列表框就有效了。单击右边的Add（添加）按钮，然后在Addresses列表框里写上IP地址，子网掩码，网关。

（5）最后，再在下面的DNSserver文本框里填上DNS的IP地址，就好了。什么？你问我具体应该什么？跟Windows7下一样！

【ADSL拨号】

ADSL这种拨号上网的方式是目前比较常见的，在我们Ubuntu系统里设置起来也比较方便。

（1）还是打开网络连接，切换到DSL标签。

（2）单击Add按钮，出现图3.9所示的界面。

[[./Images/image00295.jpeg]]

图3.9　设置ADSL拨号

（3）在Connectionname文本框里写入这个连接的名字。随便起一个就行，反正是给你们人类看的，我们操作系统不关心这个名字。

（4）如果希望在需要上网的时候自动连接到网络，就选中Connectautomatically（自动连接）复选框。

（5）在Username（用户名）文本框中写上用户名，在Password（密码）文本框中写上密码（当然是ADSL的用户名、密码，可别写你系统的用户名、密码），Service文本框空着就好。都写好之后单击右下角的Apply（应用）按钮。

（6）创建好以后，单击系统托盘上的网络连接图标（就是两个箭头那个），就可以在弹出的菜单里看到刚刚创建的ADSL连接了，如图3.10所示。单击菜单上的连接名，就可以连接到互联网了。

[[./Images/image00296.jpeg]]
图3.10　连接ADSL

【WIFI设置】

WIFI现在也很普及了，如果电脑有无线网卡，直接单击系统托盘上的网络连接图标，就会显示出可连接的无线网络，选择一个单击一下就连上了，是不是很简单（当然，如果有密码还会让你输入密码）？

好，说了这么多，这会儿那个中文支持包也该安装完了，下一步还要设置点什么呢？

** 3.2　狐狸妹妹Firefox

很快，中文支持装好了。懒蜗牛同学注销并重新登录了一下，总算看到了熟悉的文字。不过，这只是万里长征走完了第一步，还有很多的地方需要配置呢，比如浏览器就是其中之一。

*** 3.2.1　安装Flash插件

从开始安装到配置好中文，已经过了很长时间，懒蜗牛同学喝口水，喘口气，忽然想起一件至关重要的事情------该收菜了！于是他再次叫醒狐狸妹妹Firefox，向着他的菜地出发了。来到他的菜地放眼一望......咦？怎么什么也没有，一片空白啊？就算这菜被人偷光了，难道这地也让开发商征用了不成？再仔细抬眼一看，哦，原来狐狸妹妹已经做了解释，如图3.11所示。

【让Firefox自动安装Flash插件】

问题其实很简单，就是没装Flash插件而已，那就装上吧。狐狸妹妹很贴心地在提示缺少插件的同时，提供了一个“安装缺失插件（I）”按钮，就是图3.11右侧的那个。懒蜗牛同学单击了这个按钮，之后狐狸妹妹就跑到网上去找插件了。

狐狸妹妹安装插件跟apt安装软件有点类似，都不需要您手动去下载，都是他们自己去网上找来装。但是狐狸妹妹的插件只在指定的官网上有，只此一家，别无分号，所以也不用专门为她设置什么软件源了。如果顺利，狐狸会在一阵搜索之后，找到适合的插件，并且自动开始安装，安装好之后，只要把狐狸妹妹重启一下，就可以看到效果了。

然而事情并不总是这么顺利的，比如这回，狐狸妹妹上网搜索了一遍之后向用户报告：“我搜了，可是呢......没找到，您自己看着办吧。”这件事情也得原谅狐狸妹妹，毕竟人家不是专业装软件的，所以装插件的时候难免有这样的时候。不过没关系，狐狸自动安装没成功，咱还有别的办法。

【用Discovery安装Flash插件】

Flash插件也是个软件，既然是软件，那就找apt来装。我这位懒蜗牛同学也非常明白这个道理，于是他单击了“系统”|“系统管理”|“Discovery软件包管理器”------等等，不是说要找apt么，这个Discovery又是个什么东西？

apt确实很牛，干活没得说，但他是个命令行界面的软件，只能够通过文字跟用户交流。可是由于人类越来越懒，键盘能少敲一下就少敲一下，因此很多人并不喜欢跟字符界面的软件打交道，这时候，就该Discovery出场了。Discovery就是apt的图形界面前端，用户通过喜欢的图形界面，把自己的意图告诉Discovery，再由Discovery转达给apt。这两个家伙配合得很是默契，以至于很多人觉得，Discovery就是apt。

用户运行了Discovery，由于Discovery是用来给系统安装软件的，需要变身成超级用户才可以操作，因此Discovery马上要求用户输入他的密码，核对身份，核对通过之后，才显示出Discovery的界面，如图3.12所示。

[[./Images/image00298.jpeg]]

图3.12　Discovery界面

在Discovery的界面上装软件很简单，就像逛超市一样。

左侧上方的列表框里列出了所有的软件分类，左侧下方的几个按钮是分类方式。选中一个分类后，右侧上方列表框中就会列出这个分类里的所有软件包。选中其中一个软件包，下面就会有这个软件包的介绍（不过是英文的）。不过更多的时候，用户是使用上方的“快速搜索”文本框来查找需要的软件并安装的。

[[./Images/image00227.jpeg]]*提示：*软件包分类后面带有universe的，表示社区维护的开源软件；后面带有restricted的是官方维护的非开源软件；带有multiverse的是非官方维护的非开源软件；其余的是官方维护的开源软件。

装软件的时候还会有一些依赖关系。所谓依赖关系，就是要装软件A，必须先装软件B；就像要想用牙膏，就必须先得有牙刷（否则，总不能用鞋刷子刷牙吧）。

好，我们的懒蜗牛同学要装Flash插件了，我们顺便按照他的操作步骤来学习一下怎么用Discovery安装软件。

（1）懒蜗牛同学先是在软件包分类列表框里选择了“全部”，然后在上面的“快速搜索”文本框里面输入“flash”，这就是说在全部软件包里查找关键词“flash”，于是很多跟Flash有关的软件包就列出来了，这时候他看到的就是图3.13所示的样子。

[[./Images/image00299.jpeg]]

图3.13　快速搜索软件包

（2）懒蜗牛同学看到其中有一项“flashplugin-nonfree”，单击了一下，下边出现了这个软件包的介绍。他看了看，觉得没错，就是图3.14所示这个介绍。

[[./Images/image00300.jpeg]]

图3.14　软件包详细信息

（3）他右击这个软件包，在弹出的快捷菜单里选择了“标记以便安装”。

（4）Discovery收到命令之后，赶紧叫起apt说：“牛哥牛哥，快起床，用户要装flashplugin-nonfree这个包啦。”apt查阅了一下自己记录的资料，告诉Discovery：“转告他，要装flashplugin-nonfree，就得同时装上flashplugin-installer、ia32-libs、lib32asound2、lib32bz2-1.0、lib32gcc1、lib32ncurses5、lib32stdc++6、lib32v4l-0、lib32z1、libc6-i386、nspluginwrapper这些软件包。”Discovery自然如实转告，就是图3.15所示这个界面。

[[./Images/image00301.jpeg]]

图3.15　依赖关系确认

（5）这位懒蜗牛同学倒是没有被这么多乱七八糟的包名吓倒，很淡定地单击了“标记”按钮。然后就开始安装了吗？没有，都说了Discovery装软件就跟推着推车在超市购物一样，现在不过是把要买的东西放进购物车了而已。

（6）懒蜗牛同学看到了图3.16所示的这样的状况，该装的软件打好了标记，于是就单击了Discovery界面上的“应用”按钮，这个按钮的意思就相当于结账。

[[./Images/image00302.jpeg]]

图3.16　单击应用开始安装

[[./Images/image00227.jpeg]]*提示：*由于软件源里其实没有64位的Flash插件，因此64位系统在安装Flash插件的时候会安装32位的Flash插件和nspluginwrapper，以及一些32位的库文件。原本64位的Firefox是无法使用32位插件的，但依靠nspluginwrapper可以使用32位的Flash插件。

经过一段时间的等待，apt装好了Flash插件，并由Discovery汇报给了用户。懒蜗牛同学迫不及待地牵着狐狸妹妹再次奔向了他的菜园。

【手动安装Flash插件】

软件源里的Flash插件只有32位的，即使您装的是64位系统，也只有32位的Flash插件可用。那么有没有办法安装上64位的Flash插件呢？有，那得手动安装，过程也不复杂。

（1）首先到这个地方下载与你的系统对应的插件：

[[./Images/image00303.jpeg]]

对于我这个64位的Linux系统来说，就是选择Download plug-in for Linux
64-bit。

（2）下载下来之后，是一个.tar.gz的文件，直接双击解压出来，其实里面有用的就一个文件------libflashplayer.so。

（3）把这个文件放到/usr/lib64/mozilla/plugins目录里，然后重启浏览器就可以了。

说起来容易，不过这个地方可不是随便一个用户就可以放文件的，得需要超级用户的权限才行。熟悉命令的同学可以在命令行里用：sudo
cp命令把文件复制过去，如果不会用cp命令，也没问题。按下Alt+F2键，在弹出的窗口中输入gksu
nautilus，如图3.17所示。

[[./Images/image00304.jpeg]]

图3.17　Alt+F2运行程序

按Alt+F2键弹出的这个窗口是运行程序的，想运行哪个程序，在文本框里面敲就行了。比如可以在里面敲firefox，然后单击“运行”按钮，就运行起狐狸妹妹来了。

[[./Images/image00227.jpeg]]*提示：*Linux系统中对大小写敏感，输入命令要确保大小写正确。如：应输入firefox而不是Firefox来启动火狐浏览器。

我们要运行的是gksu
nautilus，这个gksu和sudo具有一样的功能，让用户完成变身，只不过这是个图形界面的。nautilus就是我们这里默认的文件浏览器。这段命令的意思就是用root身份打开文件浏览器。单击“运行”按钮之后，会让你输入密码，就跟打开Discovery的时候一样。然后就可以看到文件管理器了，注意左上角这时候是图3.18所示这样了。

[[./Images/image00305.jpeg]]

图3.18　root身份打开的文件浏览器

这个文件浏览器的窗口就拥有root的权限了，在这里面找到那个刚刚解压出来的libflashplayer.so文件，复制到/usr/lib64/mozilla/plugins目录就可以了。复制完了记得关掉这个窗口，以免误操作。

*提示：*64位的Flash插件目前还在试验阶段，没有正式发布，因此可能会有各种未知问题。这也是软件源里为何不提供64位Flash插件的原因。

*** 3.2.2　设置中文字体

【Flash中的中文字体】

这回懒蜗牛同学来到菜地，一眼望去，果然看到绿油油的一片，庄稼长势喜人啊。咦？菜地里怎么这么多麻将牌呢？再一想，不对，哪有一地麻将牌的道理，仔细一看，哦，原来是所有中文都变成方块了。

懒蜗牛同学心里纳闷：我不是都装了中文了么，系统里的其他地方都变成中文了，怎么这里还是方块呢？百思不得其解的他，本着内事不明问老婆，外事不明问Google的基本方针，赶快让狐狸妹妹去Google了一下。原来，是Flash默认使用的字体不对，只要修改配置文件，换个字体就好了。

换字体不难，只要打开/etc/fonts/conf.d/49-sansserif.conf文件，当然要记得加sudo，因为是/etc/下的文件嘛，肯定只有root才有权限。然后把里面写明使用sans-serif和serif字体的地方，都换成wqy-zenhei字体，最后保存，就好了。改完了就类似下面这样（粗体为改动部分）：

[[./Images/image00306.jpeg]]

那么换上的这个wqy-zenhei是个什么字体呢？这就是在国内开源界大名鼎鼎的文泉驿正黑字体，这是一个可以免费使用而且效果还不错的字体。

【网页中的中文字体】

除了Flash，狐狸妹妹显示的网页中的字体也可以设置。这就更简单了，运行Firefox之后，选择“编辑”|“首选项”，在弹出的窗口里选择“内容”标签，如图3.19所示。

[[./Images/image00307.jpeg]]

图3.19　修改Firefox网页字体

在这个页面中间的“默认字体”下拉列表框里选择你想用的中文字体就可以了。不过也没多少可选，主要就是文泉驿那几种字体还不错。有人会觉得这样太单调了，就这么点字体可选。别着急，字体不多，咱可以装嘛。

【安装更多的中文字体】

字体也是软件的一部分，按说也可以用apt来装。不过，软件源毕竟不是中国人开的，里面基本没有更好的中文字体了，怎么办？

如果您装了Windows
7或者其他商业化的操作系统，他们肯定是带有不少中文字体的。可以直接把他们的字体拿过来用（前提是你的系统是正版的，你已经为那些字体付过费了，否则就是偷来用了），步骤也简单。

（1）Windows
7的字体一般放在C:\Windows\Fonts这个文件夹里，里面是一些.ttf或者.ttc的字体文件，把你想要的字体对应的文件复制到我们Ubuntu系统里面来，随便存在哪都可以。

（2）进入我们Ubuntu系统，双击刚刚复制过来的字体文件，就会出现如图3.20所示的窗口（话说我很怀疑设计这段程序的人练过气功）。

[[./Images/image00308.jpeg]]

图3.20　字体预览和安装

（3）左侧显示的是这个字体的效果（这里我们就用文泉驿字体做示例了），右侧是一些基本信息。确认这是你需要的字体后，单击右下角的“安装字体”按钮，字体就安装好了，简单吧。

总之，安装字体，就是先得到.ttf或者.ttc文件（从别的系统复制也好，网上下载的也行），再双击字体文件，单击“安装字体”按钮，就可以了。

*** 3.2.3　扩展阅读：文泉驿的诞生

看过了上面的故事，有的同学可能会发牢骚说：你们这个Ubuntu系统，怎么就不能多带点中文字体呢？怎么就只有那么个文泉驿？这个文泉驿又是什么来路？

好，各位要有兴趣，我说说，您听听，在想当初......

【忆往昔艰苦岁月】

很久很久以前（对你们人类来说其实也不算久啦，也就六七年以前），那时候的Linux日趋完善，不少国内的开源同行们，都来尝试安装各种各样的Linux。虽然硬件兼容的越来越多，应用程序的安装越来越便利，但炎黄子孙们安装了Linux之后无一例外地遇到了中文化的问题------没有一个合适的中文字体。

要知道，Linux是自由的，开源的，其中很多是免费的。那么自然不可能在免费的Linux中带有任何需要付费的字体。那么Linux上自带的免费字体是从哪来的呢？都是世界各地热心的爱好者们贡献的。爱好者们自己创作一套字体，然后无偿贡献出来，给大家使用。因此，有很多优秀的、免费的英文字体、法文字体、德文字体等。

可为什么其他国家有热心爱好者贡献字体，就没有热心的中国人贡献字体呢？是因为中国人懒吗？不是；是因为中国人自私？也不是；是因为中国人口少？你自己信么？答案很简单，因为中国字多！人家做一套英文字体，总共也就26个字母的大写加小写，外带10个数字和一些标点符号，加在一起不超过100个。一个人花一周时间就能做完了。汉字有多少？找本新华字典翻开前言看看------收录汉字一万个左右！而且除了“一”、“丁”、“乙”这样极个别的特例以外，是个汉字就比英文字母难写吧。要是让一个人把这一万个汉字都做成电脑中的字体，还不得累吐了血啊。就算是只做常用汉字也得有4000多个，这还不算繁体字和各种数字、标点。

那么那时候有没有中文字体呢？当然是有的，否则难道十年以前中国人都不用电脑？可是一般中文字体都是需要收费使用的------这个很合理吧，这么困难的东西，人家凑几个人费了挺大劲做出来了，人家也得穿衣吃饭，养家糊口嘛。就算有几个免费的中文字体，也有很多问题：丢字啊、难看啊之类的。所以那个时候，Linux的中文用户就只有忍受着质量差，总丢字的中文字体，或者把其他系统下的付费字体复制过来用。

【文泉驿横空出世】

直到2004年，中文字体的事情有了转机，带来转机的，是一位美国哈佛大学医学院的博士。

这位仁兄倒不是来发扬国际主义精神的，他之所以关注中文字体，是因为他本身是个中国人------房骞骞博士。不知道是不是因为他家房子被拆迁了，所以就去美国当博士去了（这都挨得着么......）。反正他在接触到Linux的时候，发现缺少中文字体是件很头疼的事情。他也知道要想自己做出一整套中文字体，那是一定要累吐血的。但是他还知道，积少成多，集腋成裘，积跬步成千里，积点水成江河......（此处略去类似成语、俗语若干）

他利用网络为平台，创建了“文泉驿”项目，目的是要创作出一套高质量的、免费的中文字体。他自己动手编码，设计了一个网站，简化设计字体的复杂程度，把汉字字体的绘制工作搬到了网页上。这让每一个热心的志愿者都可以按照网站上的指导，完成一个个汉字字体的绘制。就这样借助全球草根志愿者的力量，他开始了“万里长征”。经过数年的连续奋战，终于取得一项永留史册的硕果，这就是“文泉驿”汉字库，其中包括点阵和矢量字体。我们系统里的文泉驿正黑，就是其中之一。

目前，文泉驿项目依然在不断地完善，不断地创造新的字体。如果您有兴趣，可以去http://wenq.org/
画几个汉字，为开源的字体贡献一点点力量。画起来也不难，网页上的操作界面大约是图3.21所示的这个样子，稍微熟悉一下就可以上手了。

[[./Images/image00309.jpeg]]
图3.21　文泉驿字体设计界面

** 3.3　输入法
** 3.4　多媒体入门

聊天工具和输入法搞好了，用户终于和MM幸福地聊在了一起。俩人聊着聊着，聊到了音乐。最近MM在听一首歌，感觉很不错，就介绍给懒蜗牛同学。而他自然愿意主动贴近MM的生活，于是赶快上网下载这首歌曲来听。

看来，到了我们的多媒体部门出场的时候了。

*** 3.4.1　安装解码器

狐狸妹妹很麻利地下载到了这首歌，是一个扩展名是.mp3的文件。懒蜗牛同学很自然地就双击了这个文件，想要播放来听听。播放音乐这种事，自然要找多媒体部门，“电影播放机”就是其中的一员，他的英文名字叫Totem。

【播放音乐遇到的问题】

我看到用户要播放MP3，就赶快叫醒了Totem来干活。Totem一本正经地拿着这个文件翻来覆去地看了半天，最后摇摇头说：这个......播不了。我一听就急了：你不是播放机嘛？在学校里你天天吹牛说你什么都能播，视频音频通吃，怎么关键时刻不行了？Totem赶快解释：老大，别急别急，我说播不了，是有原因的。我播音频也好，视频也罢，都需要解码器。我现在手头没有这个MP3的解码器，所以不能播放。

有人会问：解码器是干什么的？要知道，音乐也好，视频也好，格式有很多种。就如同现实中看电影，有数字电影，就要用数字放映机；胶片电影，就得拿传统的放映机；在家里看光盘，就得拿DVD机；看录像带，就得拿录像机。听音乐也是，磁带的和CD的，肯定没法都塞进同一个机器里。Totem这样的媒体播放软件就像一个电影放映员，解码器就是放映机。放映员再牛，也得有各种放映机做支持，没放映机他啥也放不了。
# 比喻精彩，播放软件是放映员，解码器放映机．
*提示：*Ubuntu系统自带了一些格式的解码器，如OGG格式。但为避免版权问题而没有自带MP3，RMVB等解码器。

【安装MP3解码器】

我刚想质问Totem为什么不把解码器带全了，转念一想，我自己也没把语言支持包带全嘛。算了，还是不追究这个了，先说眼下怎么办吧。Totem说：没关系，没带就让apt去装嘛。当然，装软件这么重要的事情，我们得跟用户请示一下。于是，Totem在屏幕上显示出了一条信息，就是图3.35所示这条。大概意思是，您要播放的这个东西所需要的解码器似乎没有安装，请问要不要现在去搜索一下需要装的解码器呢？

[[./Images/image00327.jpeg]]

图3.35　提示查找插件

蜗牛同学还有什么选择吗？不听Totem的这MP3就播放不了啊，所以单击了“查找”按钮。Totem在一番查找后，向用户汇报，说有这么几个包得装，装上就能播MP3啦，如图3.36所示。

[[./Images/image00328.jpeg]]

图3.36　Totem搜索到的解码器

懒蜗牛同学当然单击了“安装”按钮。之后，估计您也猜到了，当然是apt开始工作，装上了需要的解码器，最终Totem终于发出了久违的歌曲声。

不过懒蜗牛同学显然和我一样对这个音乐不感兴趣，却对Totem有了很大兴趣。

*提示：*装好解码器后，将鼠标悬停在mp3文件上，几秒钟后可以预览文件内容。

【安装rmvb解码器】

以懒蜗牛同学以往的经验，系统刚刚装好，不能播放某音频或视频文件是正常的，比如以前的Windows
XP系统刚装好时，没有软件可以播放RMVB，必须得装软件，而装软件这个工作需要用户自己去做：上网找、下载，搞不好下载回来是个压缩包，还得先装解压缩软件。可是Totem竟然不用如此繁琐，直接提示缺什么东西，只要点个确定，该装的就都装上了，太人性化了。于是懒蜗牛同学很兴奋地又找来个RMVB文件双击了一下，Totem出乎意料地没有再向用户报告什么，立刻换过视频解码器，开始播放RMVB的视频。

其实，这是因为在刚才安装MP3解码器的时候装的那个gstream0.10-ffmpeg软件包，包含了多种解码功能，其中就有对RMVB文件的支持。

*** 3.4.2　安装Mplayer播放视频

虽然Totem能够播放不少类型的视频，不过毕竟他只是多媒体部门的小弟，要说播放器，那还得说Mplayer老爷子。Mplayer可是多媒体部门的元老了，能力相当强，什么片都能放，什么RMVB、FLV、AVI、WMV全都不在话下（当然，前提还是得有解码器）。就算您没图形界面，人家在字符界面照样能依靠framebuffer给你放电影，甚至还能给您拿字符拼出电影看。现在时代发展了，都高清了，人家也不甘落后，照样能支持，什么硬解码软解码的，通吃。

*提示：*如果需要Mplayer支持硬解码，首先要安装好显卡驱动，详见3.5节。

我们的懒蜗牛同学也在网上听说了Mplayer老先生的名声，于是叫来Discovery，安装上了Mplayer。装完了之后杯具了------这个软件装哪了啊？

【Linux和Windows不同的处世哲学】

这里要介绍一下我们Linux和Windows7的不同哲学了。我们两个的做事方式，对待用户的态度，以及很多观念都有很大的不同，因此导致了软件安装的位置也很有区别。

Windows7他们家族都比较小家子气，守住自己的一亩三分地不轻易让别人动。他不希望让别人了解自己的结构，所以Windows7下的系统文件都是统一放在一个目录里面的。一般叫什么Windows之类的目录，别的软件谁也别想动。有什么样的领导，自然就有什么样的员工。Windows7下的其他软件也都学他那样，给自己建一个目录，一般在ProgramFiles目录下，跟自己有关的东西就都放在那个目录里。软件之间泾渭分明，互不干涉，老死不相往来。顶多早晨上班见面点个头而已，很少有其他的交流，工作间里一片死气沉沉。

而我们Linux的世界就不同了。我们这里的目录是开放式的，按照文件的用途划分各种目录，而不是按照软件的名字来分。每个软件都把需要用的文件放在公共的地方，如果别的软件也需要用，甭客气，拿走。就比如刚才Totem装的那些解码器，其实就是一些解码用的库文件，所以放在了/usr/lib下。
# 总算见到了解码器的真实案例.
现在来了Mplayer，他要想播放视频也需要解码器，如果是在WindowsXP下，那就请您自备一套，甭想用我的。就像WindowsMediaPlayer不能播放RMVB格式，装了RealOne后，RealOne可以播放RMVB，但是WindowsMediaPlayer照样不能，因为RealOne带来的解码器只能RealOne用。我们这里就不是这样，既然有解码器了，就大家一起用。Mplayer抄起Totem刚才装的解码器就能播放视频，这样，避免了同样功能的解码器重复开发，也省得为某一种视频格式专门装个软件。

*提示：*由于软件之间相互共享资源的特点，Linux下的软件更倾向于做得功能单一而强大。每个软件只专注于实现一个功能，需要复杂功能时通过多个软件的相互协作完成。

【软件安装位置】

说了这么半天，您一定着急了：“这Mplayer到底装哪了啊？”对于这个问题，我只好告诉你：“就像一锅被火车撞了的豆腐脑一样散落在各处了......”二进制文件放在了/usr/bin；库文件放在了/usr/lib；配置文件放在了/etc/；其他一些文档文件放在了/usr/share；还有一些数据放在了/var，乱吧。你肯定会说，这么乱，怎么管理啊？要删除的时候怎么办？这个问题的答案是：相信apt！他会记得这些安装过的文件，删除的时候肯定一个不留。
# bin lib etc share(文档) /var存放数据, 此处都解释清楚了.
*提示：*删除软件使用命令：sudo apt-get
remove<软件包名>来完成。

如果你求知欲很强，非要知道这个Mplayer到底都装了哪些文件，那也没问题。在Discovery中搜到Mplayer这个软件包，右击这个包，选择“属性”，就弹出了属性窗口。这时候选择“已安装的文件”标签，就可以看到所有文件的去向了，如图3.37所示。

[[./Images/image00329.jpeg]]

图3.37　查看软件包所有文件

那么既然安装了Mplayer，到底怎么运行他呢？如果是安装了一个图形界面的程序，我会按照这个程序的类型，自动把这个程序放在“应用程序”菜单里。不过Mplayer是个字符终端的程序，所以没有在图形界面体现。要想运行，打开终端输入：

: Mplayer path

就可以运行了。这里，path\_to\_file就是你要播放的文件的存储路径，xxx.xxx就是你那个文件。这样运行了之后，就会看到Mplayer简洁的界面了，如图3.38所示。

[[./Images/image00331.jpeg]]
图3.38　Mplayer正在播放视频

不过这么运行当然有些麻烦，所以，懒蜗牛同学很快又叫来Discovery，安装了GnomeMplayer。这又是什么呢？这是个Mplayer的图形化前端，可以像Totem一样操作，而后台还是Mplayer在做实际的播放工作。除了GnomeMplayer，还有SMplayer、Kplayer等很多Mplayer的图形前端。这些player当中，要数SMplayer功能最多，使用最方便。

*** 3.4.3　播放音乐的Rhythmbox

虽说Mplayer和Totem音频视频都是可以播放的，但毕竟视频才是主业，要说听歌，还是得找专业人士，比如我这里的Rhythmbox就是个不错的音频播放器。

Rhythm是节奏，韵律的意思，所以我们就管Rhythmbox叫八音盒吧。八音盒可以播放各种音频文件（他也是依靠Totem装的那些解码器来播放的），还可以收听网络电台，还可以去UbuntuOne网络商店购买歌曲来收听，总之功能很强大。

*提示：*UbuntuOne是由Canonical公司所推出的一项网络服务。该服务能够存储你的文件，并允许你在多台电脑上同步，还可以与好友分享这些文件。

懒蜗牛同学经过摸索，终于在“应用程序”|“影音”菜单中找到了Rhythmbox音乐播放器，赶紧把他叫起来干活，找来刚才那个MM发过来的文件（没办法，系统里暂时没有别的音频文件），让八音盒播放试试。这对于八音盒自然不是难题，马上，工作间里就到处咩咩声不绝于耳。

*** 3.4.4　MP3乱码

懒蜗牛同学使用八音盒播放音乐，并没有遇到任何问题。这要感谢支持八音盒的开源软件贡献者们。因为在不是很久的前一两年，那时候的八音盒会有MP3乱码的问题。这是怎么回事呢？

【乱码之源】

话说一个MP3的歌名、作者这些信息，是记录在MP3标签里面的。这个标签的记录方式有很多种，主要是这么几个标准：ID3v1、ID3v2n2.3、ID3v22.4、APEv2。这个ID3v1的标签支持ISO-8859-1编码，这是个国际通用的编码，但是很可惜，它是不支持中文的。

到ID3v22.3这个版本开始，增加了对UTF-16的支持，UTF-16也是一套国际通用的编码，其中就包含中、日、韩等各国的文字了。到ID3v22.4，更增加了对UTF-8的支持。UTF-8和UTF-16都是国际通用的一套编码，所不同的是UTF-8以字节为编码单元，而UTF-16以双字节为编码单元，这样就有大小端问题（也就是哪个字节先传输的问题，不知道的可以google一下）。因此总的来说，UTF-8相对更受欢迎一些。ID3v22.4支持UTF-8编码，可并没有说一定要用，只是可以用UTF-8，自然也可以用其他的编码。而APEv2标准就不同了，它规定了其编码必须统一为UTF-8编码。ISO-8859-1、UTF-8、UTF-16都是国际标准的编码。

但UTF-8、UTF-16的出现都是后来的事情了，一开始，是没有国际标准的中文编码的，那时候只有国标------国家标准，也就是我们常见的GB2312、GBK和GB18030。由于这些只是国家标准，所以开源软件的作者们（多数不是中国人）自然是忽略这些标准（当然了，每个国家都有自己的标准，听谁的啊？）。所以，如果使用ID3v1或者ID3v2类型，并且使用国家标准编码的MP3文件，就会出现乱码。如果是ID3v1或ID3v2类型，但是使用UTF-8或者UTF-16编码的，就不会出现乱码。如果是使用APEv2标准的MP3文件，就更不会出现乱码了，因为APEv2必须用UTF-8嘛（估计您已经听得满脑子乱码了吧）。不过遗憾的是很多播放软件不支持APEv2标准，好在我们的八音盒是支持的。

【解决乱码】

现在，我们Ubuntu系统的用户们是幸运的，基本不会遇到MP3乱码问题了。但是也不排除个别用户由于某种特殊需求，需要安装比较老的Ubuntu系统，那就会碰到MP3的乱码问题了。怎么解决呢？

经过前面的介绍我们知道了，MP3之所以会出现乱码，就是因为编码不对，播放器不支持。那只要转换一下就好了。有个软件，叫做mid3iconv，他就认识各种编码，让他把MP3的编码改成UTF-8的，就可以了。这个软件从哪里来？自然是让apt请来：
: sudo apt install python-mutgen

或者让Discovery安装也一样。装完了以后，就可以在你的家目录下运行：
: find . -iname "*.mp3" -execdir mid3iconv -e gbk {} \;

这样你的家目录下所有的MP3就都改过来了。

有人说，为什么WindowsXP那里的播放器就没这么多问题呢？人家毕竟是商业化的产品嘛，而且是专门的“中文版”，自然得入乡随俗地支持国家标准编码。Windows
XP下的播放器默认有个叫WMP的，WMP支持的MP3标签类型其实也不多，他不能支持ID3v22.4和APEv2的标签，还不如我们的八音盒支持的多。但是他很聪明，不支持的标签我就不显示，以显示那个MP3文件的文件名来代替，免得出现乱码，这一点倒是值得我们的软件们学习。

*提示：*这样转换后的MP3文件放到Windows环境下可能会出现乱码，因此不建议使用此方法更改MP3标签。推荐使用较新版本的、无乱码的播放器。

*** 3.4.5　扩展阅读：开源和闭源

咱们说了Windows7是个闭源的系统，而我是开源的系统。那么什么是闭源，什么又是开源呢？

闭源就是源代码不开放。我们知道，程序是程序员们一行一行地语句编出来的，C语言也好，Java也好，这一行一行的语句，就是这个程序的源代码。有了源代码，就能够百分之百地了解整个程序的构造，如何工作。而源代码是不能运行的，必须要把源代码变成可执行的二进制程序，这个过程叫做编译。源代码经过编译之后，才可以运行，但是编译之后的程序就不能够知道内部的构造了。我们平时在网上下.载的各种程序，都是编译好的二进制程序，如果你想要它的源代码，对不起，不行！这是商业秘密，怎么能给你？给了你，我们的软件怎么卖钱？这种不开放源代码的程序，就叫闭源程序。

打个比方，就好像肯德基。香辣鸡翅谁都可以得到，只要花钱买就行，但是配方没人知道（虽然其实也没多好吃）。配方就相当于源代码，香辣鸡翅就相当于编译好的二进制程序，制作过程就相当于编译过程。如果有了配方（源代码），你就可以自己做香辣鸡翅（自己用源代码编译出二进制程序），甚至还可以根据口味对配方进行修改（根据自己的需求修改源程序，为软件增加自己需要的功能）。总结一下，画成图3.39所示这样，大概就好理解了。

[[./Images/image00334.jpeg]]

图3.39　源码与目标程序的关系

那么开源又是什么？开源是一种精神，是乐于分享的理念。开源的程序就是你在获得程序的二进制文件的同时，还可以索取对应的源代码，从而学习这个程序的编写，或者完善这个程序，为这个程序添加功能。所有的一切都是对你开放的，而你要做的，就是如果你修改了这个程序，也同样要对别人开放。

再举个例子，有一天你发现，蒸鸡蛋羹的时候往里面加点牛奶，可以让鸡蛋羹更滑嫩。知道了这个窍门，你很高兴地把它告诉你的朋友，让他们分享你的经验，于是大家很高兴地也学会了做这样的鸡蛋羹。这就是开源。当然你也可能不把它告诉别人，而是保留这个秘密，甚至申请个专利，然后开个店去卖京城独一份的奶香滑嫩鸡蛋羹，这就是闭源。当然，这之中没有谁对谁错，谁好谁坏，只是理念不同而已。

** 3.5　安全软件

常用的软件配置得差不多了，懒蜗牛同学根据使用Windows7系统的经验，是该考虑系统的安全性的时候了。

*** 3.5.1　杀毒软件

对于杀毒软件，我只想说一句话：我们Ubuntu系统真的没必要装杀毒软件。

*** 3.5.2　防火墙软件

虽然作为一个桌面版的Ubuntu系统，被别人攻击的概率也不是很高，不过本着安全第一的原则，我们的懒蜗牛同学还是想要配置一下防火墙。

我们Ubuntu系统想用户之所想，急用户之所急，本着一切为人类服务的原则......嗯，好吧，自吹自擂的话就不说了，简单地说，我们自带了防火墙软件------ufw。

【不复杂的ufw】

ufw就是UncomplicatedFirewall的缩写，直接翻译过来就是不复杂防火墙。虽然是个命令行的软件，但使用起来确实不复杂。

（1）启动防火墙

系统默认情况下是不启用防火墙的，如果想要启用，只要运行以下命令：
: sudo ufw enable

这样防火墙就启动了，并且以后每次启动系统时，都会随系统启动。

（2）默认配置

光启动了还不行，防火墙都不知道该防点什么呢。这防火墙总得配置一下吧？当然，我们Ubuntu系统想用户之所想，急用户之所急，本着......长话短说，对于一般的桌面用户，只要运行以下命令使用默认配置就可以了。
: sudo ufw default deny

这样，防火墙会默认拒绝外部对本机的访问，允许本机对外部的任何请求。

（3）关闭防火墙

啥时候不想用防火墙了，运行这个命令：
: sudo ufw disable

这样防火墙就关闭了。和开启时一样，这个动作也会导致下次启动系统时防火墙依然不启动。

（4）查看状态

如果你忘了现在防火墙是开是关，就运行这个命令查看：
: sudo ufw status

这个就没什么可解释的了。

（5）开启/关闭指定端口

如果想对某个端口进行单独操作，比如想开启本机的80端口让别人访问，可以运行
: sudo ufw allow 80

同理，如果要关闭外界对这个端口的访问，则运行：
: sudo ufw delete allow 80
（6）针对指定IP制定规则

如果看某个IP顺眼，想特殊照顾一下，允许那个IP访问本机，那么就这样：
: sudo ufw allow from 192.168.1.1

这个意思就是允许192.168.1.1对本机的访问。

【更加不复杂的gufw】

上面说的仅仅是一些最基本的使用方法。如果你觉得这样用起来还不方便，没关系，我们Ubuntu系统想用户之所想，急用户......算了，再废话用户真该跟我急了。我们还有个软件，叫做gufw，看名字就能猜出来，他是ufw的图形界面前端。默认系统中是没有的，需要叫apt来安装：
: sudo apt-get install gufw

安装好之后运行gufw命令来启动这个软件，您就会看到图3.40所示的简单的界面。在这个界面上，可以简单地启动/停用防火墙、查看防火墙状态、添加规则等。功能和ufw是一样的。

[[./Images/image00343.jpeg]]

图3.40　gufw界面

*** 3.5.3　扩展阅读：为什么Linux不需要杀毒软件

好吧，我承认对于杀毒软件的陈述确实少了一点，大概不能够完全打消您心头的疑虑。好，那么我们就来说说，Linux到底为什么不需要杀毒软件。

【病毒是有针对性的】

首先我们来了解一下病毒。病毒是什么？其实简单说，病毒只是一个程序，一个坏坏的程序。既然是程序，就跟其他的正常程序一样，依赖于不同的平台。啥意思？就是说，给Windows7打工的，没法给我干活，给我干活的，也不理Windows
7那一套。我要是拎过一个Windows7那边的程序跟他说，快起床干活，他压根听不懂，闭上眼睛继续睡，语言不通啊。所以，病毒也一样，针对Windows7的病毒传染不了我，针对我们Linux的病毒也不可能传染Windows 7。

【针对Linux的病毒】

那有没有针对Linux的病毒呢？答案是有的。

第一个Linux病毒诞生于1996年，澳大利亚的一个叫VLAD的组织用汇编语言编写了Linux系统下的第一个病毒：Staog，不过这个病毒只是个试验品，只是证明一下Linux也会感染病毒。这个病毒会感染二进制文件，获取root权限，然后说：Look！我获取了root权限耶。炫耀完了也就算了，并不做任何破坏性的事情。后来也有了一些有破坏性的病毒，但是数量很少。经过科学家计算，一个不装任何杀毒软件或防火墙的桌面用Linux系统，在互联网上裸奔并中毒的几率，大约比一个人花两块钱买彩票中五百万后立刻被雷劈中的概率大那么一点点（这是哪门子科学家算的）。病毒少，是Linux不容易中毒的一个原因。可为什么病毒少呢？

【没前途的Linux病毒】

话说有一个邪恶的人，出于某种邪恶的目的，想编个Windows病毒。他买书学习Windows的知识，找熟悉Windows的高人前辈们学习。经过种种努力，编出了一个病毒，然后把这个病毒放在自己的网站上，只要是使用Windows系统和IE浏览器上网的人一登录这个网站，就必定中毒。放上去之后，他等着，看着有1000人来到了他的网站，看着其中900多个纯洁的WindowsXP系统感染了病毒（总有不用IE的，防护比较到位的Windows吧），他很有满足感，他觉得自己成为大牛了。

话说有另一个邪恶的人，出于某种邪恶的目的，他想编个Linux病毒。他买书学习Linux的知识------不过好像不太好找，好不容易找到基本也都是基础知识。找找高深的吧，还都是英文。好吧，英文的也看，对着字典慢慢研究。哦，对，还可以找找高人指导，不过......也不好找，找了半天找到一个高人，拜他为师吧。经过师父指点和自己的努力，他学到了很多Linux的知识。然后费尽心机编了一个Linux的病毒，把这个病毒放在自己的网站上，只要使用Linux系统，Firefox浏览器上网的人一登录这个网站，就必定中毒。放上去之后，他等着，看着有1000人来到了他的网站------998个人都是Windows系统......好吧，好歹还有俩用Linux的吧，可其中一个不用Firefox，而是用Opera。邪恶的家伙咬咬牙，忍！看最后一个------哈哈，这家伙是Linux+Firefox，只要登录准中毒。可是只见着人来了转转又走了，一点事没有，临走还顺手改了自己的主页，上面写着：“小子，跟我玩你还嫩点。------师父留。”

通过对比我们得出结论------写Linux病毒，没前途！

【开源的本质带来的安全】

除了以上所说的原因以外，Linux及周边软件的开源本质，也导致了病毒较少。

比如我，用户要装什么软件，都是叫apt去找。apt可不是四处瞎找，而是去Ubuntu官方的软件源里去找------因为这些软件是开源的，所以可以随意拿来，放在一起，做成软件源，供Ubuntu们统一下载。官方的东西，自然没有病毒了，哪个娘也不能害自个孩子不是？

Windows就不一样了，它上面的软件基本都是闭源的，要装，得自己上网搜，在某个网站搜到了，下载下来装。可这“某个网站”，就不知道靠不靠谱了。谁知道上面的软件有没有病毒呢？那么，微软的公司不能也开个官方的软件源，让大家都去他那下软件吗？当然不能了，都是闭源的软件，你拿来用都要给人家钱的（当然，也有免费的），拿来分发可能压根就是不允许的。

另一方面，Linux的开源导致了大家都可以对其进行完善，一旦发现漏洞，随便谁都可以去修复这个漏洞，只要他有能力。可Windows呢？发现了漏洞，也只能漏着，等着微软公司去修。人家要是不修（比如可能正赶上食堂伙食不好导致的工人罢工），谁也没辙。

** 3.6　硬件和驱动

到目前为止，懒蜗牛同学的Ubuntu体验还算愉快，这主要是由于我带的驱动多，这个电脑上的硬件我都可以比较顺利地驱动起来。有人问，什么是驱动？

*** 3.6.1　驱动------硬件的使用手册

电脑硬件，不像电视机电冰箱似的，买来插上就能用。硬件要想在计算机上工作，得需要会操作它的软件，这个软件，一般就是我们操作系统了。但我们操作系统，也不可能生来就会操作所有的硬件，就像你不是生来就会开飞机一样，得学、得考本、得移库、倒库、坡起、限制门。狐狸妹妹在旁边鄙视了我一下：“你见过飞机过限制门吗？！那是汽车。”反正，我们要想会操作一个硬件，也需要学习，这就需要驱动程序，任何硬件要想工作都是需要驱动程序的。

这时候可能有人会提出反对意见：“硬盘、光驱，这些也都是硬件，哪听说过要装驱动程序的？还有我的U盘、摄像头，也都是插上就能用，不用装驱动啊。”不用装驱动，不代表不需要驱动。硬盘光驱是最基本的存储设备，而且它们的驱动很简单，也统一。任何一家厂商生产的硬盘都是一样的用法，所以硬盘光驱的驱动就被集成在了BIOS和操作系统里面，不用额外安装。其他所谓不用装驱动的设备也一样，都是因为驱动集成在了系统里。比如Windows7家以前的Windows 98系统，就不认识U盘，需要装驱动才行。到WindowsXP这一代，就不用装了，集成了。到Windows 7这一代，就继承了更多的驱动。

*提示：*由于操作系统存储于硬盘，硬盘必须先于操作系统工作起来，导致BIOS必须拥有操作硬盘的能力，因此BIOS必须包含硬盘驱动。光驱也是同理。

驱动就像一本给操作系统看的使用手册，上面写明了如何操作这个硬件，写哪个寄存器就把数据发出去了，从哪个寄存器读就把数据读回来了，往哪个寄存器写个什么数据就自爆了等（这是什么硬件啊......）。就像买来电视机，里面的使用手册一样。
# 光驱是使用手册,书里的比喻实在是到位.
针对不同的操作系统，需要有不同版本的驱动程序。这个好理解吧，因为我们是完全不同的系统嘛。像Windows7/XP/98，他们都是微软公司的系统，用的驱动还不同呢。我们这根本就不是一个阵营的，那就更不一样了。我们和Windows7就像说着不同语言的不同国家的人。我们能看得懂的手册，Windows7看不懂，反过来也一样。你家电视机的说明书不也有中文版、英文版、韩文版、非洲土著语版吗。但是，并不是每个硬件厂家都给每个系统制作一份驱动，毕竟厂商人力财力有限。电视机也不是每台都有非洲土著语版的说明书嘛（压根就没有吧......）。

所以，一般硬件厂商会优先开发市场占有率最高的那个系统的驱动程序，哪个系统？目前来说，就是Windows7家族的系统了。我们Linux就经常遇到一些因为厂家不提供驱动而无法使用的硬件，很多人还抱怨我们无能，冤枉啊......

*** 3.6.2　安装受限驱动

其实现在我们Linux能够支持的硬件已经逐渐多起来，大多数主流的设备基本不用装驱动就可以使用了。一般像我们Ubuntu系统，装完了系统之后也就装装显卡驱动就可以了，没准连显卡驱动都不用装。

如果你的计算机上有什么硬件不能驱动起来，先看看能不能安装受限驱动。选择“系统”|“系统管理”|“硬件驱动”，打开之后就弹出如图3.41所示的窗口。

[[./Images/image00344.jpeg]]
图3.41　硬件驱动窗口

如果发现了可以驱动的硬件，就会在上方的列表框里显示出相应的驱动。如果想要安装，只要在上方列表框里选中相应驱动，并单击下面的“激活”按钮就可以了。

*提示：*“硬件驱动”中列出的是可以安装或已经安装的“受限驱动”，并不是所有的驱动都列在这里。所谓受限驱动，是指该驱动不开源，有版权，因此系统安装的时候并没有自动安装。

** 3.7　本章小结

咱们这回书中讲到，这个定居在硬盘里的兔子，慢慢找着工作的感觉了。也赶上这位懒蜗牛同学善于动手，把这个兔子配置得基本可用了。什么装软件的apt、上网用的浏览器、各种聊天的工具、看片听歌的解码器，当然也少不了硬件驱动的程序，这些都配置好了，这个兔子就基本能够满足懒蜗牛同学的日常使用要求了。

然而论兔子的本事，远不止这些许的功能；那懒蜗牛同学，也未必满足于如此简单的使用。毕竟后事如何，还看下回分解。
#+BEGIN_QUOTE
本章学到的:
1) 解码器是放映机
2) 驱动是用户手册或者说明书.
3) ufw设置.
#+END_QUOTE
