* 第5章 VirtualBox

使用虚拟机.

有些Windows的软件可以靠红酒大师来搞定，但其实这只是一少部分，更多的软件是无法被红酒大师催眠并工作的，比如懒蜗牛同学需要用到的Office软件。这时候就需要虚拟机软件来解决问题了。

** 5.1　天上掉下个盒子妹

今天懒蜗牛同学让狐狸妹妹去
http://www.virtualbox.org/wiki/Linux_Downloads
这个地址下载了一个deb包，之后自然是双击这个包，叫apt来装了。apt把这个包拆开，看见里面躺着一只软件------VirtualBox。

*提示：*网上下载的商业版VirtualBox并不开源，如果想使用开源版，可以安装软件源中的virtualbox-ose软件包。

VirtualBox（咱以后就叫她盒子妹吧）被apt从deb包里抱出来之后，整理整理自己的行李，很有礼貌地跟周围的人打了个招呼。盒子妹长着一张国字脸，就像图5.19所示的模样，很文静的样子，打招呼时说话有些怯生生的感觉。跟大家打过招呼后，她来找到我，把一些内核模块放在我这里，安顿好一切后，就去睡觉去了。这家伙给我的印象还不错，我就跟狐狸妹妹聊起她的背景来。

[[./Images/image00431.jpeg]]

图5.19　VirtualBox的logo

【悲惨的身世】

听狐狸妹妹说，她的身世是挺悲惨的。

盒子妹最初生在德国，生母是一个叫做InnoTek的公司。盒子妹一生下来就经常被VMware和VirtualPC这样的邻居大哥哥欺负，不过好在她自己的本领还算可以，并且后来他亲妈InnoTek为了让她学习到更好的本领，还把她的源代码依据GPL协议开放了，让全世界的高手们来指导她。之后盒子妹凭借不错的性能，以及可以免费使用的特点，总算闯出了自己的一小块天地。

不过好景不长，2008年，亲妈InnoTek被卖给了红太阳公司，盒子妹自然也被过继过去。但好在红太阳公司这个后妈还算不错，很照顾小盒子的成长，继续让她在开放的环境中健康长大。没过多长时间，靠着红太阳公司众多高手的支持和全世界热心用户的拥护，小盒子俨然已经成为Linux下同类软件的首选，开源的本质使得追求自由的人们放弃了VMware；简便的操作让人们淘汰了Qemu；跨平台的支持更是微软公司的那个VirtualPC所无法比拟的。

*提示：*Qemu是一个字符界面的开源虚拟机软件。

盒子妹本来以为自己之后的道路会走得很顺畅。可是，2009年，又一次波折打击了小盒子------红太阳这个后妈也被卖给人了。收购他们的是一个很古老的公司，听说那个公司里的人好像都还在写甲骨文，也不知道他们每天用象形文字怎么办公。

甲骨文公司收购了红太阳之后，红太阳的几个孩子都面临着一段未知的命运。其中最让人担心的是MySQL，因为之前MySQL经常跟甲骨文家亲生的Oracle打架，这一下Oracle的亲妈成了MySQL的后妈，那MySQL还不得天天受欺负啊。我们的盒子妹的处境或许会稍好一些，毕竟甲骨文亲生的孩子里没有和她有同样本领的，所以小盒子在那里或许还不至于受谁欺负。不过那也毕竟是经历了重大的变革，对小盒子的成长还是会有一些影响吧。

** 5.2　创建虚拟机

说了这么多，忘了介绍盒子妹是干什么的了，她是一个虚拟机，就是能在一台计算机上虚拟出另外一台计算机来。怎么样，听起来这个本事很厉害吧？我们第一次看她工作的时候，都看呆了。

【注册账号】

“您好，欢迎使用VirtualBox虚拟机软件。请问您有账号吗？如果没有我可以帮您注册一个。”

懒蜗牛同学一愣：“这个还要账号啊？”

“是的，我们为了更好地为您提供优质的软件，需要您使用邮箱地址来注册为我们的用户。不过您放心，注册很方便，而且是免费的。”

懒蜗牛这下放心了：“好，那就注册吧。”

“那么请问您的名字是？邮箱是什么？”

懒蜗牛按照盒子的指导，------做了答复，很快就注册完了。

【创建虚拟机】

注册结束后，终于进入了盒子妹的主界面。目前上面还什么都没有，于是懒蜗牛单击了左上角的“新建”按钮，盒子妹就开始引导懒蜗牛创建虚拟机了。

“您好，您选择了新建一台虚拟计算机，我将指导您一步步创建。准备好了就按下一步。”

懒蜗牛觉得盒子妹服务很周到，单击了“下一步”按钮。

（1）设置计算机名称及系统类型

“首先，给您要新建的计算机取个名字吧，这样便于以后管理。另外，您还得告诉我这台计算机打算安装什么样的操作系统。”

懒蜗牛说：“名字就叫Windows XP，懒蜗牛的虚拟机，系统呢，装Windows
XP吧。”懒蜗牛输入了名字，选好了系统类型，如图5.20所示。

[[./Images/image00432.jpeg]]

图5.20　设置虚拟机名称及系统类型

*提示：*系统类型只决定了VirtualBox为虚拟机内的系统提供什么样的驱动程序，不影响系统安装的成败，在虚拟机创建好以后系统类型可以更改。

（2）为虚拟机分配内存

“好的，如果要装Windows XP那我建议您使用192
MB的内存，您看可以么？”“分配512
MB吧，快一点。”懒蜗牛同学按如图5.21所示，设置了内存。

[[./Images/image00433.jpeg]]

图5.21　设置虚拟机内存

（3）为虚拟机设置硬盘

“好的，那么现在请您选择硬盘。您可以选择创建一个新的虚拟硬盘，也可以使用已经存在的虚拟硬盘。虚拟硬盘就是由我们VitrualBox软件创建的，扩展名为vdi的文件。”说着，盒子妹给了懒蜗牛两个单选项，如图5.22所示。

[[./Images/image00434.jpeg]]

图5.22　选择虚拟机硬盘

“我这里没有现成的虚拟硬盘，新建一个吧。”懒蜗牛单击了“创建新的虚拟硬盘”单选按钮，并单击了“下一步”按钮，于是盒子妹弹出了新建虚拟硬盘向导的窗口，如图5.23所示。

[[./Images/image00435.jpeg]]

图5.23　创建新的虚拟硬盘

【创建虚拟硬盘】

（1）选择虚拟硬盘类型

懒蜗牛单击了“下一步”按钮后，盒子妹又给出了两个选择：“好，那现在我来引导您创建硬盘，首先选择一下您想要哪种虚拟硬盘？有固定大小的，有动态扩展的。”如图5.24所示。

[[./Images/image00436.jpeg]]

图5.24　选择虚拟硬盘类型

“这个......什么动态固定的，有什么区别么？”

“固定大小，就是选择了硬盘大小时，马上在您的真实硬盘上创建出相应大小的文件。动态扩展则是先创建出一个很小的文件，等您真的往这块虚拟的硬盘里复制数据的时候，它才会变大。动态扩展的硬盘，自然要比固定大小的效率低一些。”

“哦......这样啊，那来动态的吧！省地方是关键。”懒蜗牛同学选择了动态扩展，并单击“下一步”按钮。

（2）设置硬盘名称及大小

之后盒子妹继续询问下一个问题：“好的，那么请给您的这块硬盘起个名字，并且指定大小。”就是图5.25所示这样。

[[./Images/image00437.jpeg]]

图5.25　选择虚拟硬盘大小及名称

“那就叫‘懒蜗牛的硬盘'吧，大小最大能多大？”

“2 TB。”

“好，那就2
TB吧！过回大硬盘的瘾，哈哈。反正是动态分配的，不会真的一下子就占我2
TB的空间吧？”

“是的，您真聪明。”这句话怎么听着都不像是在夸懒蜗牛呢？

【完成创建】

“那么现在您选择了创建懒蜗牛的虚拟机，准备安装Windows
XP系统，内存512MB，是用懒蜗牛的硬盘作为虚拟硬盘文件。如果没问题，请单击‘完成'按钮。”就像图5.26所示这样，盒子妹让懒蜗牛同学最终确认一下。

[[./Images/image00438.jpeg]]

图5.26　确认创建虚拟机

于是，懒蜗牛单击了“完成”按钮。

之后回到盒子妹的虚拟机管理界面，从左侧列表框里已经可以看到，出现了一个新的计算机，如图5.27所示。

[[./Images/image00439.jpeg]]

图5.27　虚拟机管理界面

懒蜗牛迫不及待地单击了“开始”按钮，很快屏幕上弹出了一个虚拟机窗口，里面好像是BIOS的界面，这自然是盒子妹虚拟出来的BIOS启动画面了。之后屏幕一黑，屏幕上出现了一行文字，大概意思就是：没有操作系统，没法启动。

懒蜗牛问：“我不是选择了Windows
XP系统么，怎么没有？”盒子妹赶紧解释：“那个......我是虚拟机软件，不是虚拟系统软件。我只能虚拟出一台计算机，至于上面的系统，就像真正的机器一样，需要安装后才能使用。”懒蜗牛恍然大悟：“哦，原来如此啊，那我赶快装系统吧。”

*提示：*VirtualBox也有Windows的版本，可以在Windows系统中通过虚拟机安装Ubuntu系统。创建虚拟机的方法与上述类似。只是选择系统类型时应选择Ubuntu，并且挂载安装光盘时改为挂载Ubuntu安装盘而已。

** 5.3　在虚拟机上安装Windows系统

要说安装Windows
XP系统，对懒蜗牛同学来说可是轻车熟路了。于是他找来一个叫做Windows
XP.iso的光盘镜像文件，准备安装系统。

【装载ISO文件】

要安装系统，就先要把安装光盘放进光驱吧，这个盒子妹虚拟的计算机不需要你真的刻出光盘，只要准备好ISO文件，把文件装载进虚拟机就可以了。装载的步骤也不麻烦。

（1）懒蜗牛选中了他刚刚建好的那个虚拟机（这时候这个虚拟的计算机已经被关闭了），在右侧单击“Storage”标签，如图5.28所示。

[[./Images/image00440.jpeg]]

图5.28　虚拟技配置信息

*提示：*也可以单击虚拟机管理基面上的“设置”按钮，并在左侧列表框里选择“Storage”。

（2）在弹出的界面中，懒蜗牛选择了那个虚拟出来的光驱。就像图5.29中1.所示（目前是“没有盘片”的状态）。右边有个CD/DVD
Device下拉列表框，这个不用管它，保持默值认值就行。

[[./Images/image00441.jpeg]]

图5.29　挂载ISO文件

（3）懒蜗牛单击了CD/DVD
Device下拉列表框右边的光盘图标，如图5.29中2.所示。在弹出的菜单中选择了“Choose
a virtual CD/DVD disk file”选项，并找到需要用的ISO文件，就可以了。

经过这么一番操作之后，就相当于把光盘放进光驱里面了。然后干什么呢？当然是打开电源啦！

【安装Windows XP】

随着盒子妹手中的一根魔法杖的挥舞，内存里顿时出现一个像玻璃盒子一样的大房间，整个房间占地面积达512
MB。之后盒子妹又一挥法杖，那个ISO文件被慢慢打开，爬出了Windows XP。

Windows
XP从虚拟的光驱里爬出来之后，跑进那个512MB的玻璃房子中。也不知道盒子妹用了什么方法，Windows
XP乖乖地待在那512
MB的空间里，玻璃外的空间他好像都没看见一样，当然更看不见我们。对于Windows
XP来说，他正在一台拥有512 MB内存、2 TB硬盘、3 GHz主频的CPU的机器上运行。

Windows XP在检查了这些硬件后抱怨道：“这是谁攒的机器啊！3 GHz主频的CPU，2
TB的硬盘，竟然只有512 MB的内存！”听得我们都想乐。之后Windows
XP摆出了一张蓝脸，跟用户说：“我这个系统可只能装在一台机器上啊，装多了算盗版，小心警察叔叔请你去喝茶。还有啊，咱丑话说在前头，我要是挂了，弄坏了你的数据可别赖我啊，跟我没关系。你同意不同意？同意就按F8键，不同意趁早就别装了。”懒蜗牛想都没想就按了F8键------早已麻木了。

之后的过程对懒蜗牛来说，已经没有任何悬念了，都装过多少次了。这台机器的配置还是不错的，Windows
XP虽然跑在盒子妹创建的虚拟机里面，但是仍然只花了30分钟就安装好了。

装好了之后又重启了一下计算机，Windows XP终于正常启动了。

** 5.4　安装功能增强包

系统装好了之后，当然还得装驱动。懒蜗牛同学并没有去翻箱倒柜地去找买计算机时的各种驱动盘。因为他明白，Windows
XP是被装在了虚拟机里，所以Windows
XP看到的计算机并不是这台真正的计算机，而是盒子妹虚拟出来的计算机。这台虚拟的计算机使用的硬件也都是虚拟的，跟你的真实硬件无关。

*提示：*虚拟机中的硬件只有CPU与真机的相同。

说了半天，这虚拟机里的Windows
XP应该装什么驱动呢？不用您操心，盒子妹都已经预备好了。您只要像我们的懒蜗牛同学这样操作就可以了。

（1）只见懒蜗牛在Windows
XP的虚拟机窗口上单击了“设备”|“安装增强功能”，如图5.30所示。

[[./Images/image00442.jpeg]]

图5.30　安装增强功能

（2）之后，盒子妹从兜里掏出了一个ISO文件，悄悄塞到给Windows
XP虚拟出来的那个光驱里。Windows
XP应该会自动运行光盘上的安装程序。如果Windows
XP没有自动运行，那就手动打开光驱（是虚拟机里面Windows
XP的光驱哦，不是我的真光驱）。双击安装程序，也就是图5.31中所示的这个程序。

[[./Images/image00443.jpeg]]

图5.31　增强功能安装程序

（3）程序的安装很简单，一路单击“下一步”就好了。

装好之后，自然是要重启一下了，重启后的Windows
XP似乎性能更好了些，而且懒蜗牛同学的鼠标也可以很平滑地在Windows
XP与我之间切换了。

*提示：*安装增强包前，鼠标点入虚拟机中之后需要按右shift键使鼠标回到真机中。

Windows XP装完了，然而懒蜗牛的目的不是装个Windows
XP耍着玩，而是要在上面装上Office。Office安装程序懒蜗牛自然是有，放在隔壁那个Windows
7的屋子里。但是大玻璃笼子里的虚拟的Windows
XP连我们这个Linux的屋子都看不见，更看不见隔壁那Windows
7的屋子了。那怎么办呢？别担心，盒子妹早就设计好了。

** 5.5　为虚拟机配置网络

盒子妹模拟出来的虚拟机和我所在的真机之间，主要是通过网络来共享数据的。因此，首先配置好虚拟机的网络是必要的。

其实多数情况下，盒子妹默认就已经把虚拟机的网络设置好了，可以直接从虚拟机访问真机，如果真机能够联网，那么虚拟机也能联网。不过我们还是再唠叨一下虚拟机的网络设置，万一出现问题了也好排查。

（1）要设置虚拟机的网络，可以在盒子妹的主界面------虚拟机管理界面中选中要设置的虚拟机，并且单击右侧的“网络”标签，如图5.32所示。

[[./Images/image00444.jpeg]]

图5.32　单击网络标签设置网络

*提示：*也可以单击虚拟机管理基面上的“设置”按钮，并在左侧列表框里选择“网络”。

（2）之后弹出虚拟机设置窗口，并选择“网络”选项，如图5.33所示。

[[./Images/image00445.jpeg]]

图5.33　网络设置界面

（3）确认“网络连接1”标签中，勾选了“启用网络连接”复选框。并且连接方式选择“NAT”方式，即可实现虚拟机访问真机及访问互联网。

*提示：*如果需要虚拟机中有更多块网卡，则依照上述设置方法设置“网络连接2”～“网络连接4”即可。

这里我们要解释一下连接方式下拉列表框中的所有选项，总共有4个：NAT、Bridged
Adapter、Internal、Host-only
Adapter。假设你现在的计算机所在的网络拓扑结构如图5.34所示。我们依次解释一下这几种虚拟机的连接方式。

[[./Images/image00446.jpeg]]

图5.34　实体计算机网络拓扑结构

　NAT------这个是最省心的。由盒子妹负责把你的实体机虚拟为一台仅针对虚拟机的服务器，为她所管理的虚拟机提供路由、DHCP、DNS等网络服务。虚拟机不必设置网络，只要通过DHCP自动获取网络配置即可联网。这种模式下的网络拓扑结构如图5.35所示。

[[./Images/image00447.jpeg]]

图5.35　NAT模式网络拓扑结构

　Bridged
Adapter------网桥模式。这个模式让虚拟机像真机一样连接到实际的网络环境中。在拓扑结构上虚拟机和你的真机是同级别、并列的关系，如图5.36示意的这样。这种模式需要设置一下虚拟机的网络，真机如何设置的，虚拟机参照着设置就可以了。

[[./Images/image00448.jpeg]]

图5.36　Bridged Adapter模式的网络拓扑结构

　Internal------内部网模式，这个模式不允许虚拟机和真机之间有任何的网络连接，而只是盒子妹所创建的所有虚拟机之间相互联网，如图5.37所示。

[[./Images/image00449.jpeg]]

图5.37　Internal模式的网络拓扑结构

　Host-only
Adapter------主机模式，这个模式只提供虚拟机和真机相互连接，默认状态下虚拟机无法访问外网，网络拓扑结构如图5.38所示。这种模式下，需要真机为虚拟机提供路由或代理之类的服务，虚拟机才可以访问外网。

[[./Images/image00450.jpeg]]

图5.38　Host-only Adapter模式的网络拓扑结构

** 5.6　与虚拟机共享数据

设置好了网络，这样真机和虚拟机之间交换数据就方便多了。比如可以在真机的系统上开一个ftp服务，然后虚拟机通过ftp客户端来访问，实现交换各种文件。不过这种方法还是比较麻烦的，最简单的就是利用盒子妹提供的“分配数据空间”的功能来共享数据。下面就跟着我们的懒蜗牛同学来一步一步设置吧。

（1）首先，懒蜗牛同学在一台运行着的虚拟机窗口中（也就是虚拟的那个Windows
XP啦），单击了“设备”|“分配数据空间”，如图5.39所示。

[[./Images/image00451.jpeg]]

图5.39　分配数据空间

（2）之后，盒子妹弹出了数据空间窗口，目前里面什么也没有，如图5.40所示。不过别急，只见懒蜗牛单击了右边的“添加”按钮，就是一个带加号的文件夹那个图标。

[[./Images/image00452.jpeg]]

图5.40　数据空间窗口

*提示：*“临时分配”的数据空间，在本次虚拟机停止运行之后失效。“固定分配”的数据空间对于当前虚拟机一直有效。

（3）单击了“添加”按钮之后，盒子妹弹出了“添加数据空间”窗口。懒蜗牛单击了“数据空间位置”下拉列表框右侧的下三角按钮，把位置指向了存有Office安装文件的目录。之后在下面的“数据空间名称”文本框里给这个空间起了个名字，叫做share。为了确保不会破坏里面的数据，懒蜗牛还勾选了下面的“只读分配”复选框。这样设置好之后，如图5.41所示。确认没问题后就单击“确定”按钮，如图5.42所示，已经建立了一个临时分配的数据空间了。

[[./Images/image00453.jpeg]]

图5.41　添加数据空间

[[./Images/image00454.jpeg]]

图5.42　创建了临时分配数据空间

*提示：*“Auto-mount”选项用于虚拟机中的系统就是Linux系统的情况。勾选此选项，虚拟机中的Linux系统将在每次启动时自动挂载所分配的数据空间，否则需要在系统中手动挂载。

*提示：*勾选“固定分配”复选框，将设置此次创建的数据空间为“固定分配”，否则为“临时分配”。

（4）盒子妹的设置这就完成了，现在该去操作那个虚拟的Windows
XP了。只见懒蜗牛右击了Windows
XP的“我的电脑”，选择了“映射网络驱动器”，如图5.43所示。

[[./Images/image00455.jpeg]]

图5.43　在虚拟机中映射网络驱动器

（5）然后会弹出一个对话框，让懒蜗牛选择要映射的网络文件夹，如图5.44所示。懒蜗牛单击了“浏览”按钮。

[[./Images/image00456.jpeg]]

图5.44　映射网络驱动器

（6）在弹出的“浏览文件夹”窗口中，懒蜗牛选择了“整个网络”|“VirtualBox
Shared Folders”|“\\VBOXSVR\share”，如图5.45所示。

[[./Images/image00457.jpeg]]

图5.45　浏览文件夹

（7）选中之后单击“确定”按钮。这样，在这个虚Windows
XP的“我的电脑”里面就多出了一个网络驱动器，就像图5.46所示的那样。双击进去，就是看到刚刚被懒蜗牛指定的那个目录的内容了，Office的安装程序就在那里。

[[./Images/image00458.jpeg]]

图5.46　在“我的电脑”中查看刚刚创建的数据共享

这之后的过程就没有什么意思了。懒蜗牛在Windows
XP中进入刚刚创建的那个空间，双击那个setup.exe文件，就开始了Office的安装。在一堆毫无悬念的“下一步”之后，就装好了。

** 5.7　更多虚拟机介绍

内存里的软件们逐渐熟悉了Windows
XP的工作场景，渐渐地都把目光从大玻璃笼子里的Windows
XP身上收回来，并且从“好奇”档切换到“崇拜”档，然后投向盒子妹。大家纷纷称赞：“盒子妹你真厉害！”“竟然能控制好这么大的内存，里面关着Windows
XP还不让它溢出。”“你是怎么给Windows XP虚拟出那么一块显卡的？”

盒子妹被崇拜得不大好意思，向大家说道：“其实......也没有什么啦。我只是创造出一个虚拟的计算机而已。有这种能力的，也不是只有我有一个，像Qemu，VMware这些都是值得我学习的前辈。”

【老牌的VMware】

gedit小弟忙问：“VMware？这是啥？说来听听。”

狐狸接过来说：“我来介绍吧！VMware，这是个比较老牌的虚拟机软件，各方面都比较强悍。长相有些纠结，就是如图5.47所示这个样子。他的稳定性是很高的，好多企业服务器都用到他。”

[[./Images/image00459.jpeg]]

图5.47　VMware的Logo

我不解地问：“服务器用虚拟机干什么？”盒子妹过来解释：“主要是为了在节约硬件成本的同时，提高系统解决方案的安全性。打个比方吧，比如一个公司内部，要架设一个邮件服务器，和一台ftp文件共享服务器。由于用户不多，所以这两个服务都不需要很高的硬件配置。完全可以在一台服务器上跑这两个服务。”

“那就装俩呗！”gedit忍不住说。

“但是，”狐狸妹妹接了过来，“如果提供邮件服务的软件有漏洞，就可能有入侵者通过漏洞获取整个系统的管理员权限，然后就可以影响到ftp服务。反过来也一样。于是这台服务器被攻破的概率就变大了。是吧，妹子？”

盒子妹点点头：“嗯！就是这个意思。在一个系统中，开启的服务越多，可能引来的漏洞就越多，一旦其中一个服务被攻击，就可能影响其他的服务。”

狐狸也点点头：“对，就是这意思。”

盒子妹继续说：“但是用VMware这样的虚拟机就不同了，可以在服务器上装虚拟机，再在每个虚拟机里分别装系统，每个虚拟系统分别跑一个服务。”

狐狸：“对，分散。”

盒子：“这样就算某个系统上的服务受到攻击......”

狐狸：“也不影响其他服务。”

盒子：“所以就等于把风险......”

狐狸：“分散了。”

盒子：“这样安全性就......”

狐狸：“提高了。”

我和gedit都点点头：“行，你们俩说相声去吧！”

【Virtual PC】

“那还有什么虚拟机软件呢？”gedit继续问。

狐狸说道：“那时候还有个叫Virtual
PC的，一开始称得上跟VMware并驾齐驱了。那时候的情况是，VMware对内存的需求比较大，而Virtual
PC对硬盘用得比较多。不过后来那个Virtual
PC被微软公司收购了，自此以后就慢慢地销声匿迹了，我找到一张他工作时的照片，如图5.48所示。”众软件看了纷纷叹气摇头，惋惜这位明珠暗投的软件。

[[./Images/image00460.jpeg]]

图5.48　Virtual PC中运行的Windows XP

*提示：*Virtual
PC被微软收购后，不再提供对Linux主系统及客户系统的支持。即：既不能在Linux系统中安装Virtual
PC软件，也不能在Virtual PC虚拟的计算机内安装Linux系统。后来自Virtual PC
2007版本以后，再没有更新桌面版Virtual PC。

【Qemu】

狐狸妹妹稍稍停顿后继续说：“后来，咱们开源界自然也不甘寂寞，有了Qemu这个虚拟机。这是一个字符界面的软件，使用起来有些费劲，不过功能很强大，可以和GDB协作，用于调试内核代码。也就是在Qemu创建的虚拟机里面跑一个内核，然后在虚拟机外开着一个GDB来进行调试。再加上他开源的性质，可以很方便地迁移到各种硬件平台，于是成为嵌入式开发者常用的软件。”

“哦......”大家虽然“哦”了一下，但我估计还有很多软件不知道嵌入式是什么意思。

狐狸妹妹继续说：“后来呢，Qemu确实使用不方便，不过好在是开源的，于是就有人在Qemu的基础上进行改造，添加了图形界面，并且增强了对显卡的支持等，最终把Qemu改造成了一个很好用的虚拟机。”gedit问：“改完了叫什么？还叫Qemu么？”狐狸微微笑了一下，望向盒子妹，只见盒子妹不好意思地说：“就是我啦，我是在Qemu的基础上修改而来的。”

【KVM】

继续听狐狸介绍：“再后来呢，出了那个叫CPU的虚拟技术，就是让CPU可以支持直接被虚拟机使用，比如Intel家的VT-x技术和AMD公司的AMD-v技术，虽然实现可能不大一样，不过从根本上讲其原理都差不多。”

gedit问：“这种技术是干什么用的？”

盒子妹解释道：“主要就是可以提高虚拟机的运行效率。对于这种技术支持得最好的，可以说就是KVM了。不过他需要内核的支持，并且本身并不是一个完整的虚拟机软件，因此需要依赖Qemu来运行。”

狐狸接过盒子的话说：“这样运行起来的虚拟机，运算效率大幅度提高。但是KVM虚拟的显卡很差劲，所以用来虚拟不需要太多显示任务的服务器应用很有意义，但是对于桌面应用，看片、玩游戏，就不如咱们的盒子妹妹了。”盒子妹又不好意思地说：“姐姐过奖了。”

*提示：*现在的VirtualBox同样可以支持CPU虚拟化技术。在虚拟机管理界面单击“设置”按钮，在左侧列表框里选择“系统”，然后在右侧选择“硬件加速”标签，如图5.49所示。勾选“启用VT-x/AMD-V”，以及“启用Nested
Paging”复选框即可（前提是确认你的CPU支持相应虚拟化技术）。

[[./Images/image00461.jpeg]]

图5.49　设置硬件加速

** 5.8　扩展阅读：虚拟化技术

刚才说到了CPU的虚拟化技术，顺道介绍介绍这个CPU的虚拟化到底是怎么回事吧。

【只有操作系统才能随意使用CPU】

话说这个CPU可是我们程序要使用的重要设备，每个程序都离不开它。可是CPU很贵，不能发给每个程序一个（否则懒蜗牛同学会破产），于是就得由我统一管理CPU的使用。狐狸妹妹来了，我会把CPU给她用，gedit小弟也来了，他也要用，那么我就经过了工作间内激烈的角逐，各类软件的选拔工作已经尘埃落定。BT下载类软件中，奔流脱颖而出；视频播放软件里，SMplayer异军突起；图片管理软件组，Picasa稳操胜券；网络浏览器呢，自然是Firefox成功卫冕。然而，虽然Firefox胜过了Chrome和Opera这样的对手，却不知道有更要命的兼容性问题在前面等着她，也等着我们的用户，懒蜗牛同学。告诉他俩，一人用一阵儿。

像狐狸，gedit这些普通的程序我都可以管，因为我是内核嘛。普通的程序们也都知道我让他们停止使用CPU时，一定得停止。并且，CPU的哪些功能是可以用的，哪些是不能用的，他们也都清楚。但是现在盒子妹饲养的Windows
XP工作，就不一样了。

*提示：*某些CPU的高级命令只有内核级别的代码才能够使用。

【虚拟的操作系统也想随意使用CPU】

Windows
XP在工作的时候，是不管其他人的。首先他根本也看不见其他人，再者，他也是个操作系统，正常来说，他运行在一台机器上的时候，所有软件都得听他的。他可以随便使用任何硬件，当然包括这个CPU，就像我在我们这里的地位一样。然而当他运行在虚拟机里的时候，我们可不能真的让他随意使用CPU，否则万一他执行个啥特权级指令，搞不好我们整个系统就挂了。

你问啥叫特权指令？简单地说，CPU的指令分为两种，普通指令和特权指令。一般软件用CPU的时候都是执行各种普通指令，特权指令只有我这个操作系统可以执行。之前不是说CPU就像是个计算器么，特权指令就像这个计算器上的一些特殊的按键，实现一些特殊的功能，比如关机、复位什么的。这些按键一般人不许动，只有我可以按。

【让虚拟的系统用虚拟的CPU去吧】

那么既然有我在，当然就不许Windows XP动这些东西。可是盒子妹要给Windows
XP营造一个真实的硬件环境才行，怎么办呢？很简单，虚拟一个假的给Windows
XP用。看Windows
XP给虚拟的CPU发了普通指令，就扭头向我申请使用CPU，然后把那个指令在真实的CPU上执行一下，最后把结果传回给Windows
XP。如果Windows-XP执行了一个特权命令，那么盒子就不真的去执行，而是模拟一下执行那个命令后应该有的效果。比如Windows-XP执行了CPU自爆指令，盒子妹就在那里模拟：“轰隆！咔嚓，哎哟......”然后WindowsXP就信以为真了。

【虚拟化技术让虚拟系统能用上真的CPU】

那现在回来说这个CPU的虚拟化技术。

Windows
XP的每一个命令都由盒子妹转发是一件比较耗费时间的事情，于是人们提出了CPU的虚拟化技术。支持虚拟化技术的CPU有两种操作模式：VMX
root operation（根虚拟化操作）模式和VMX non-root
operation（非根虚拟化操作）模式，统称为VMX操作模式。VMX root
operation就是平时我们用的模式。而VMX non-root
operation则是像盒子妹饲养的Windows
XP这样的虚拟机系统所用的模式，在这种模式下，一些特权指令可以执行，但不会对真机起任何作用。

有了这种技术后，盒子妹就轻松了。Windows
XP要用CPU的时候，不用虚拟一个CPU给他用，而是直接向我申请使用CPU，然后把CPU开到非根虚拟化操作模式，之后直接扔给Windows
XP使用就可以了，反正这个时候那个自爆按钮已经不管用了，扔给他随便玩去吧！

** 5.10　本章小结

本章中，咱们的"乌棒兔"可算是认识了Windows系统里的不少软件。谁让这些软件只有Windows的版本呢。懒蜗牛非得用这些软件，那就只能是模拟运行了。

要么模拟Windows的系统环境来运行软件，这就是Wine的工作；要么就是干脆模拟出一台计算机，里面装Windows，这就是VirtualBox的工作。不过，模拟终归是模拟，偶尔应急还行，真正顺手的还是咱系统里的原生软件。不知道懒蜗牛同学还将体验到哪些有意思的原生软件，诸位，敬请期待下一章吧。
